(function() {
    var type_impls = Object.fromEntries([["bitcoin_hashes",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hkdf%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hkdf.rs.html#40-106\">source</a><a href=\"#impl-Hkdf%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"struct\" href=\"bitcoin_hashes/struct.Hkdf.html\" title=\"struct bitcoin_hashes::Hkdf\">Hkdf</a>&lt;T&gt;<div class=\"where\">where\n    &lt;T as <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt;::<a class=\"associatedtype\" href=\"bitcoin_hashes/trait.GeneralHash.html#associatedtype.Engine\" title=\"type bitcoin_hashes::GeneralHash::Engine\">Engine</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hkdf.rs.html#45-49\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin_hashes/struct.Hkdf.html#tymethod.new\" class=\"fn\">new</a>(salt: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>], ikm: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>]) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Initialize a HKDF by performing the extract step.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expand\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hkdf.rs.html#55-94\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin_hashes/struct.Hkdf.html#tymethod.expand\" class=\"fn\">expand</a>(&amp;self, info: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>], okm: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"bitcoin_hashes/hkdf/struct.MaxLengthError.html\" title=\"struct bitcoin_hashes::hkdf::MaxLengthError\">MaxLengthError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Expand the key to generate output key material in okm.</p>\n<p>Expand may be called multiple times to derive multiple keys,\nbut the info must be independent from the ikm for security.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expand_to_len\" class=\"method\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hkdf.rs.html#101-105\">source</a><h4 class=\"code-header\">pub fn <a href=\"bitcoin_hashes/struct.Hkdf.html#tymethod.expand_to_len\" class=\"fn\">expand_to_len</a>(\n    &amp;self,\n    info: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>],\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"bitcoin_hashes/hkdf/struct.MaxLengthError.html\" title=\"struct bitcoin_hashes::hkdf::MaxLengthError\">MaxLengthError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Expand the key to specified length.</p>\n<p>Expand may be called multiple times to derive multiple keys,\nbut the info must be independent from the ikm for security.</p>\n</div></details></div></details>",0,"bitcoin_hashes::HkdfSha256","bitcoin_hashes::HkdfSha512"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[4324]}