(function() {
    var type_impls = Object.fromEntries([["bitcoin_hashes",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#111-114\">source</a><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#113\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-Clone-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#99-101\">source</a><a href=\"#impl-Debug-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#100\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#103-105\">source</a><a href=\"#impl-Display-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#104\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#22-25\">source</a><a href=\"#impl-FromStr-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#23\">source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#24\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.83.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GeneralHash-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#116-125\">source</a><a href=\"#impl-GeneralHash-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Engine\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#117\">source</a><a href=\"#associatedtype.Engine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bitcoin_hashes/trait.GeneralHash.html#associatedtype.Engine\" class=\"associatedtype\">Engine</a> = <a class=\"struct\" href=\"bitcoin_hashes/struct.HmacEngine.html\" title=\"struct bitcoin_hashes::HmacEngine\">HmacEngine</a>&lt;T&gt;</h4></section></summary><div class='docblock'>A hashing engine which bytes can be serialized into. It is expected\nto implement the <code>io::Write</code> trait, and to never return errors under\nany conditions.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_engine\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#119-124\">source</a><a href=\"#method.from_engine\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin_hashes/trait.GeneralHash.html#tymethod.from_engine\" class=\"fn\">from_engine</a>(e: <a class=\"struct\" href=\"bitcoin_hashes/struct.HmacEngine.html\" title=\"struct bitcoin_hashes::HmacEngine\">HmacEngine</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Produces a hash from the current state of a given engine.</div></details></div></details>","GeneralHash","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#127-138\">source</a><a href=\"#impl-Hash-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"bitcoin_hashes/trait.Hash.html\" title=\"trait bitcoin_hashes::Hash\">Hash</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#128\">source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bitcoin_hashes/trait.Hash.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = &lt;T as <a class=\"trait\" href=\"bitcoin_hashes/trait.Hash.html\" title=\"trait bitcoin_hashes::Hash\">Hash</a>&gt;::<a class=\"associatedtype\" href=\"bitcoin_hashes/trait.Hash.html#associatedtype.Bytes\" title=\"type bitcoin_hashes::Hash::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>The byte array that represents the hash internally.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#130\">source</a><a href=\"#method.from_byte_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin_hashes/trait.Hash.html#tymethod.from_byte_array\" class=\"fn\">from_byte_array</a>(bytes: T::<a class=\"associatedtype\" href=\"bitcoin_hashes/trait.Hash.html#associatedtype.Bytes\" title=\"type bitcoin_hashes::Hash::Bytes\">Bytes</a>) -&gt; Self</h4></section></summary><div class='docblock'>Constructs a hash from the underlying byte array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#133\">source</a><a href=\"#method.from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin_hashes/trait.Hash.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(sl: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;, <a class=\"struct\" href=\"bitcoin_hashes/struct.FromSliceError.html\" title=\"struct bitcoin_hashes::FromSliceError\">FromSliceError</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.15.0: use <code>from_byte_array</code> instead</span></div></span><div class='docblock'>Copies a byte slice into a hash object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#135\">source</a><a href=\"#method.to_byte_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin_hashes/trait.Hash.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"bitcoin_hashes/trait.Hash.html#associatedtype.Bytes\" title=\"type bitcoin_hashes::Hash::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Returns the underlying byte array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#137\">source</a><a href=\"#method.as_byte_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bitcoin_hashes/trait.Hash.html#tymethod.as_byte_array\" class=\"fn\">as_byte_array</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"bitcoin_hashes/trait.Hash.html#associatedtype.Bytes\" title=\"type bitcoin_hashes::Hash::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Returns a reference to the underlying byte array.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LEN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/lib.rs.html#276\">source</a><a href=\"#associatedconstant.LEN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bitcoin_hashes/trait.Hash.html#associatedconstant.LEN\" class=\"constant\">LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a> = &lt;Self::Bytes&gt;::LEN</h4></section></summary><div class='docblock'>Length of the hash, in bytes.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DISPLAY_BACKWARD\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/lib.rs.html#281\">source</a><a href=\"#associatedconstant.DISPLAY_BACKWARD\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bitcoin_hashes/trait.Hash.html#associatedconstant.DISPLAY_BACKWARD\" class=\"constant\">DISPLAY_BACKWARD</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'>Flag indicating whether user-visible serializations of this hash should be backward. <a href=\"bitcoin_hashes/trait.Hash.html#associatedconstant.DISPLAY_BACKWARD\">Read more</a></div></details></div></details>","Hash","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-Hash-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#107-109\">source</a><a href=\"#impl-LowerHex-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#108\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-Ord-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#980-982\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#1001-1003\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#1027-1029\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-PartialEq-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-PartialOrd-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#1335\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#1353\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#1371\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#1389\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<section id=\"impl-Copy-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-Copy-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section>","Copy","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<section id=\"impl-Eq-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-Eq-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section>","Eq","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"],["<section id=\"impl-StructuralPartialEq-for-Hmac%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bitcoin_hashes/hmac.rs.html#18\">source</a><a href=\"#impl-StructuralPartialEq-for-Hmac%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"bitcoin_hashes/trait.GeneralHash.html\" title=\"trait bitcoin_hashes::GeneralHash\">GeneralHash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"bitcoin_hashes/struct.Hmac.html\" title=\"struct bitcoin_hashes::Hmac\">Hmac</a>&lt;T&gt;</h3></section>","StructuralPartialEq","bitcoin_hashes::HmacSha256","bitcoin_hashes::HmacSha512"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[39939]}